{"remainingRequest":"/Users/macbook/Desktop/vue-element-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macbook/Desktop/vue-element-demo/src/components/CodeEdit/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macbook/Desktop/vue-element-demo/src/components/CodeEdit/index.vue","mtime":1545206808537},{"path":"/Users/macbook/Desktop/vue-element-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbook/Desktop/vue-element-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/macbook/Desktop/vue-element-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbook/Desktop/vue-element-demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n\nimport * as brace from 'brace'\nimport 'brace/ext/modelist'\nimport 'brace/ext/themelist'\nconst modelist = brace.acequire('ace/ext/modelist')\nconst themelist = brace.acequire('ace/ext/themelist')\nexport default {\n  props: {\n    mode: {\n      type: String,\n      default: 'javascript'\n    },\n    theme: {\n      type: String,\n      default: 'vibrant_ink'\n    },\n    height: {\n      type: String,\n      default: '100%'\n    },\n    width: {\n      type: String,\n      default: '100%'\n    },\n    fontSize: {\n      type: String,\n      default: '14px'\n    },\n    staticVal: {\n      type: [Array],\n      default: () => {\n        return [\n          '/**',\n          '* 日期格式化',\n          '* @param {type} String HHMMDDhhmmss  至于中间用什么请自便',\n          '* @param {timer} Number',\n          '* HH年MM月DD月 hh:mm:ss => 2018年4月12日 22:09:30',\n          '*/',\n          'export const AGE = 19'\n        ]\n      }\n    },\n    highlightline: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data () {\n    return {\n      editor: null,\n      fontsize: this.fontSize\n    }\n  },\n  methods: {\n    setMode () {\n      const modes = modelist.modesByName[this.mode]\n      if (modes) {\n        require(`brace/mode/${modes.name}`)\n        this.editor.getSession().setMode(modes.mode)\n      }\n    },\n    setTheme () {\n      const themes = themelist.themesByName[this.theme]\n      if (themes) {\n        require(`brace/theme/${themes.name}`)\n        this.editor.setTheme(themes.theme)\n      }\n    },\n    emitCode () {\n      this.$emit('code-change', this.editor.getValue())\n    }\n  },\n  mounted () {\n    this.$nextTick(() => {\n      this.editor = brace.edit('code-edit')\n      this.setMode()\n      this.setTheme()\n      if (this.staticVal) {\n        this.editor.setValue(this.staticVal.join('\\n'))\n      }\n      this.editor.clearSelection()\n      this.editor.$blockScrolling = Infinity\n      this.editor.getSession().on('change', this.emitCode)\n    })\n  },\n  watch: {\n    mode () {\n      this.setMode()\n    },\n    theme () {\n      this.setTheme()\n    },\n    fontSize (val) {\n      this.fontsize = val\n    },\n    highlightline (newVal) {\n      this.editor.setHighlightActiveLine(newVal)\n    }\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"src/components/CodeEdit","sourcesContent":["<template>\n  <div id=\"code-edit\" class=\"editor\" :style=\"{'min-height': height, 'min-width': width, 'font-size': fontsize}\">\n  </div>\n</template>\n\n<script>\nimport * as brace from 'brace'\nimport 'brace/ext/modelist'\nimport 'brace/ext/themelist'\nconst modelist = brace.acequire('ace/ext/modelist')\nconst themelist = brace.acequire('ace/ext/themelist')\nexport default {\n  props: {\n    mode: {\n      type: String,\n      default: 'javascript'\n    },\n    theme: {\n      type: String,\n      default: 'vibrant_ink'\n    },\n    height: {\n      type: String,\n      default: '100%'\n    },\n    width: {\n      type: String,\n      default: '100%'\n    },\n    fontSize: {\n      type: String,\n      default: '14px'\n    },\n    staticVal: {\n      type: [Array],\n      default: () => {\n        return [\n          '/**',\n          '* 日期格式化',\n          '* @param {type} String HHMMDDhhmmss  至于中间用什么请自便',\n          '* @param {timer} Number',\n          '* HH年MM月DD月 hh:mm:ss => 2018年4月12日 22:09:30',\n          '*/',\n          'export const AGE = 19'\n        ]\n      }\n    },\n    highlightline: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data () {\n    return {\n      editor: null,\n      fontsize: this.fontSize\n    }\n  },\n  methods: {\n    setMode () {\n      const modes = modelist.modesByName[this.mode]\n      if (modes) {\n        require(`brace/mode/${modes.name}`)\n        this.editor.getSession().setMode(modes.mode)\n      }\n    },\n    setTheme () {\n      const themes = themelist.themesByName[this.theme]\n      if (themes) {\n        require(`brace/theme/${themes.name}`)\n        this.editor.setTheme(themes.theme)\n      }\n    },\n    emitCode () {\n      this.$emit('code-change', this.editor.getValue())\n    }\n  },\n  mounted () {\n    this.$nextTick(() => {\n      this.editor = brace.edit('code-edit')\n      this.setMode()\n      this.setTheme()\n      if (this.staticVal) {\n        this.editor.setValue(this.staticVal.join('\\n'))\n      }\n      this.editor.clearSelection()\n      this.editor.$blockScrolling = Infinity\n      this.editor.getSession().on('change', this.emitCode)\n    })\n  },\n  watch: {\n    mode () {\n      this.setMode()\n    },\n    theme () {\n      this.setTheme()\n    },\n    fontSize (val) {\n      this.fontsize = val\n    },\n    highlightline (newVal) {\n      this.editor.setHighlightActiveLine(newVal)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n</style>\n"]}]}