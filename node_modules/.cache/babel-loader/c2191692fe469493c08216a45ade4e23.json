{"remainingRequest":"/Users/macbook/Desktop/vue-element-demo/node_modules/babel-loader/lib/index.js!/Users/macbook/Desktop/vue-element-demo/src/vuex/store.js","dependencies":[{"path":"/Users/macbook/Desktop/vue-element-demo/src/vuex/store.js","mtime":1545270376196},{"path":"/Users/macbook/Desktop/vue-element-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbook/Desktop/vue-element-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _slicedToArray from \"/Users/macbook/Desktop/vue-element-demo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.array.some\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    isCollapse: false,\n    visitedTags: []\n  },\n  mutations: {\n    isCollapse: function isCollapse(state) {\n      state.isCollapse = !state.isCollapse;\n    },\n    addTags: function addTags(state, payload) {\n      var flag = state.visitedTags.some(function (item) {\n        return item.path === payload.route.path;\n      }); //打开标签后，判断数组中是否已经存在该路由\n      // console.log(flag ? '存在' : '不存在');\n\n      if (!flag) {\n        state.visitedTags.push(Object.assign({}, // {\n        //   path: payload.route.path,\n        //   name: payload.route.name,\n        //   params: payload.route.params,\n        //   meta: payload.meta\n        // }\n        payload.route));\n      } //数组中路由存在不push ,单击左侧路由变化,点击标签路由变化均触发\n\n    },\n    //添加标签\n    closeTags: function closeTags(state, payload) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = state.visitedTags.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _step$value = _slicedToArray(_step.value, 2),\n              key = _step$value[0],\n              item = _step$value[1];\n\n          if (item.path === payload.view.path) {\n            state.visitedTags.splice(key, 1);\n            break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    } //如果要关闭的标签在路由中存在则删除 \n\n  },\n  actions: {\n    closeTags: function closeTags(context, payload) {\n      context.commit('closeTags', payload);\n      return context.state.visitedTags;\n    }\n  }\n});",{"version":3,"sources":["/Users/macbook/Desktop/vue-element-demo/src/vuex/store.js"],"names":["Vue","Vuex","use","Store","state","isCollapse","visitedTags","mutations","addTags","payload","flag","some","item","path","route","push","Object","assign","closeTags","entries","key","view","splice","actions","context","commit"],"mappings":";;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACE,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAE,KADP;AAELC,IAAAA,WAAW,EAAE;AAFR,GADqB;AAK5BC,EAAAA,SAAS,EAAE;AACTF,IAAAA,UADS,sBACED,KADF,EACS;AAChBA,MAAAA,KAAK,CAACC,UAAN,GAAmB,CAACD,KAAK,CAACC,UAA1B;AACD,KAHQ;AAITG,IAAAA,OAJS,mBAIDJ,KAJC,EAIMK,OAJN,EAIe;AACtB,UAAIC,IAAI,GAAGN,KAAK,CAACE,WAAN,CAAkBK,IAAlB,CACT,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,IAAL,KAAcJ,OAAO,CAACK,KAAR,CAAcD,IAAhC;AAAA,OADK,CAAX,CADsB,CAGpB;AACF;;AACA,UAAI,CAACH,IAAL,EAAW;AACTN,QAAAA,KAAK,CAACE,WAAN,CAAkBS,IAAlB,CACEC,MAAM,CAACC,MAAP,CACE,EADF,EAEE;AACA;AACA;AACA;AACA;AACA;AACAR,QAAAA,OAAO,CAACK,KARV,CADF;AAYD,OAlBqB,CAkBpB;;AACH,KAvBQ;AAuBN;AACHI,IAAAA,SAxBS,qBAwBCd,KAxBD,EAwBQK,OAxBR,EAwBiB;AAAA;AAAA;AAAA;;AAAA;AACxB,6BAA0BL,KAAK,CAACE,WAAN,CAAkBa,OAAlB,EAA1B,8HAAuD;AAAA;AAAA,cAA3CC,GAA2C;AAAA,cAAtCR,IAAsC;;AACrD,cAAIA,IAAI,CAACC,IAAL,KAAcJ,OAAO,CAACY,IAAR,CAAaR,IAA/B,EAAqC;AACnCT,YAAAA,KAAK,CAACE,WAAN,CAAkBgB,MAAlB,CAAyBF,GAAzB,EAA8B,CAA9B;AACA;AACD;AACF;AANuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOzB,KA/BQ,CA+BP;;AA/BO,GALiB;AAsC5BG,EAAAA,OAAO,EAAE;AACPL,IAAAA,SADO,qBACGM,OADH,EACYf,OADZ,EACqB;AAC1Be,MAAAA,OAAO,CAACC,MAAR,CAAe,WAAf,EAA4BhB,OAA5B;AACA,aAAOe,OAAO,CAACpB,KAAR,CAAcE,WAArB;AACD;AAJM;AAtCmB,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    isCollapse: false,\n    visitedTags: []\n  },\n  mutations: {\n    isCollapse(state) {\n      state.isCollapse = !state.isCollapse;\n    },\n    addTags(state, payload) {\n      let flag = state.visitedTags.some(\n        item => item.path === payload.route.path\n      );//打开标签后，判断数组中是否已经存在该路由\n      // console.log(flag ? '存在' : '不存在');\n      if (!flag) {\n        state.visitedTags.push(\n          Object.assign(\n            {},\n            // {\n            //   path: payload.route.path,\n            //   name: payload.route.name,\n            //   params: payload.route.params,\n            //   meta: payload.meta\n            // }\n            payload.route\n          )\n        );\n      } //数组中路由存在不push ,单击左侧路由变化,点击标签路由变化均触发\n    }, //添加标签\n    closeTags(state, payload) {\n      for (const [key, item] of state.visitedTags.entries()) {\n        if (item.path === payload.view.path) {\n          state.visitedTags.splice(key, 1);\n          break;\n        }\n      }\n    } //如果要关闭的标签在路由中存在则删除 \n  },\n  actions: {\n    closeTags(context, payload) {\n      context.commit('closeTags', payload)\n      return context.state.visitedTags;\n    }\n  }\n})\n"]}]}